[{"title":"React","type":0,"sectionRef":"#","url":"cra/","content":"","keywords":""},{"title":"Create React App​","type":1,"pageTitle":"React","url":"cra/#create-react-app","content":"Create React App is the main part of the development environment, these docs only covers the Intility templates for it. This means that everything from the official Create React App docs applies to your project. If you can't find what your looking for here, check the CRA docs. "},{"title":"Recommended reading​","type":1,"pageTitle":"React","url":"cra/#recommended-reading","content":"Environment VariablesAdvanced ConfigurationCode Splitting "},{"title":".NET Templates","type":0,"sectionRef":"#","url":"dotnet/","content":"","keywords":""},{"title":"Recommended reading​","type":1,"pageTitle":".NET Templates","url":"dotnet/#recommended-reading","content":"Tutorial: Create a web API with ASP.NET CoreASP.NET Core fundamentalsIntility Template Source "},{"title":"FastAPI Template","type":0,"sectionRef":"#","url":"fastapi/","content":"FastAPI Template This FastAPI template is intended for you to get a good baseline for creating your FastAPI applications, with Azure AD authentication and authorization. The template has a lot of batteries included, such as pre-commit, project structure, example tests and options to use SQLModel and mypy. Before attempting to use this template, it is highly recommended you do the official tutorial. If you've created APIs in other Python web frameworks, FastAPI differs from the others by: FastAPI is built on starlette, so it's async firstAPI first, MVC second OpenAPI (aka Swagger) documentation are automatically generated! Fully type annotated, and types are used on runtimeFastAPI has very few batteries included (compared to e.g. Django). That's where this template is handy.","keywords":""},{"title":"Express TypeScript","type":0,"sectionRef":"#","url":"express/","content":"","keywords":""},{"title":"Getting started using this template​","type":1,"pageTitle":"Express TypeScript","url":"express/#getting-started-using-this-template","content":""},{"title":"Prerequisites​","type":1,"pageTitle":"Express TypeScript","url":"express/#prerequisites","content":"Some experience with JavaScriptNode.js version &gt; 14 installed. You can find the installer here: Download | Node.jsDocker and Docker Compose, optional.Git You'll also need to install Yeoman to install this template. Yeoman Yeoman is a tool for scaffolding tool for generating new applications. Yeoman combines the powerful build configuration tool Gulp with npm for handling dependencies. "},{"title":"Goals​","type":1,"pageTitle":"Express TypeScript","url":"express/#goals","content":"Provide an ready to develop TypeScript configuration setup.Ready configured EsLint with the most common rules.Ready configured test environment using Jest Async error handling.Logging to Azure Application Insights.Integrate common security measures: CORSAuthentication and authorization using Passport as well as custom common token rules. Including Role-based access control, guest user validation and checking user tenant. "},{"title":"Questions and Contributions​","type":1,"pageTitle":"Express TypeScript","url":"express/#questions-and-contributions","content":"While this setup might work, it is nor perfect or complete! Maybe I'm missing some key part? or you have a suggestion on something that can be done different or in another way? If you have any questions or suggestions, please send an merge request on the GitLab project located HERE or message me at Microsoft Teams "}]