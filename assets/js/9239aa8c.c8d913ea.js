"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5058],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2202:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Getting Started",sidebar_label:"Getting Started",slug:"/GettingStarted",sidebar_position:2},p=void 0,s={unversionedId:"gettingStarted",id:"gettingStarted",title:"Getting Started",description:"Scaffolding the project",source:"@site/express/gettingStarted.mdx",sourceDirName:".",slug:"/GettingStarted",permalink:"/express/GettingStarted",draft:!1,editUrl:"https://github.com/Intility/templates/tree/main/docusaurus/express/gettingStarted.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Getting Started",sidebar_label:"Getting Started",slug:"/GettingStarted",sidebar_position:2},sidebar:"express",previous:{title:"Introduction",permalink:"/express/"},next:{title:"NPM Scripts",permalink:"/express/NpmScripts"}},u={},c=[{value:"Scaffolding the project",id:"scaffolding-the-project",level:2},{value:"Running the project",id:"running-the-project",level:2},{value:"What should I do next?",id:"what-should-i-do-next",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"scaffolding-the-project"},"Scaffolding the project"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g yo                           # Install Yeoman CLI\nnpm install -g @intility/generator-express  # Install Intility Express project generator\n\nmkdir <projectName> && cd <projectName>     # Create a new project folder\nyo @intility/express                        # Use Yeoman CLI to run the template generator\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"During the project scaffolding you will be asked the following questions:"),(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Project name and description"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"These values will be injected into the ",(0,i.kt)("inlineCode",{parentName:"li"},"package.json")," file and will also ble shown in the Swagger documentation."),(0,i.kt)("li",{parentName:"ul"},"Default project name will be the name of the folder."))),(0,i.kt)("li",{parentName:"ol"},"Do you want to include ",(0,i.kt)("strong",{parentName:"li"},"demo endpoints")," in the generated project?",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is recommended for first time setup or if you are not familiar with Express API architecture"),(0,i.kt)("li",{parentName:"ul"},"These files provides example CRUD operations with a router-, controller- and service-layer"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Automatic Git initialization")," and push to given Git repository. - Please ",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.intility.com/projects/new"},"create a GitLab")," project, and get the SSH key. - NOTE: Unselect the: 'Initialize repository with a README' under 'Project Configuration'\n:::"))),(0,i.kt)("p",null,"During dependency installation stage of the project initialization it may be shown an error message for missing Python or C++ compiler."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Please ignore this error message"),"\n:::"),(0,i.kt)("h2",{id:"running-the-project"},"Running the project"),(0,i.kt)("p",null,"After the project have successfully been scaffolded you are ready to start the server."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"code .                                  # Open project in VS Code\nnpm run start                           # Start the project\n")),(0,i.kt)("p",null,"After starting the project an ",(0,i.kt)("inlineCode",{parentName:"p"},"Missing Environment variable: INTILITY_TENANT_ID")," Error will be thrown.\nTo fix this, create an ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file by using the template provided in ",(0,i.kt)("inlineCode",{parentName:"p"},".env.template")," and setup authentication by following this (",(0,i.kt)("a",{parentName:"p",href:"./setup/ApplicationRegistrations"},"Guide"),")"),(0,i.kt)("p",null,"For an more comprehensive overview of all included Npm Scripts, have a look at this page: ",(0,i.kt)("a",{parentName:"p",href:"./NpmScripts"},"NPM Scripts")),(0,i.kt)("h2",{id:"what-should-i-do-next"},"What should I do next?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Generate SonarQube Token (",(0,i.kt)("a",{parentName:"li",href:"https://create.intility.app/react/configuration/sonarqube"},"Guide"),")",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add the badge (",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.intility.com/digital-telco/sonarqube/sonarqube-badge-proxy/-/blob/master/README.md"},"Guide"),")"))),(0,i.kt)("li",{parentName:"ul"},"Add Code coverage regexp to Gitlab to make the badge work.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Navigate to: ",(0,i.kt)("inlineCode",{parentName:"li"},"GitLab Repository -> Settings -> CI/CD -> General pipelines -> Test coverage parsing")),(0,i.kt)("li",{parentName:"ul"},"Enter: ",(0,i.kt)("inlineCode",{parentName:"li"},"All files[^|]*\\|[^|]*\\s+([\\d\\.]+)")))),(0,i.kt)("li",{parentName:"ul"},"Create an ",(0,i.kt)("inlineCode",{parentName:"li"},".env")," file by using the template provided in ",(0,i.kt)("inlineCode",{parentName:"li"},".env.template"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Setup authentication (",(0,i.kt)("a",{parentName:"li",href:"./setup/ApplicationRegistrations"},"Guide"),")"))),(0,i.kt)("li",{parentName:"ul"},"Setup your OpenShift environment:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Create a project on OpenShift (",(0,i.kt)("a",{parentName:"li",href:"https://create.intility.app/react/configuration/deploy"},"Guide"),")"),(0,i.kt)("li",{parentName:"ul"},"Create a Deploy Token for your GitLab Repository (",(0,i.kt)("a",{parentName:"li",href:"https://create.intility.app/react/configuration/gitlab#add-gitlab-deploy-token"},"Guide"),")")))))}m.isMDXComponent=!0}}]);