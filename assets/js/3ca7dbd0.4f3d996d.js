"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4862],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),d=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=i,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return t?r.createElement(g,a(a({ref:n},s),{},{components:t})):r.createElement(g,a({ref:n},s))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3074:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return c}});var r=t(3117),i=t(102),o=(t(7294),t(3905)),a=["components"],l={title:"Adding Environments",sidebar_position:1},p=void 0,d={unversionedId:"advanced/adding-environments",id:"advanced/adding-environments",title:"Adding Environments",description:"The included pipeline contains jobs for dev and prod environments.",source:"@site/cra/advanced/adding-environments.mdx",sourceDirName:"advanced",slug:"/advanced/adding-environments",permalink:"/cra/advanced/adding-environments",draft:!1,editUrl:"https://github.com/Intility/templates/tree/main/docusaurus/cra/advanced/adding-environments.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Adding Environments",sidebar_position:1},sidebar:"cra",previous:{title:"Deploy",permalink:"/cra/configuration/deploy"},next:{title:"Deploy with ArgoCD",permalink:"/cra/advanced/deploy-argocd"}},s={},c=[{value:"Enabling the <code>deploy:prod</code> job",id:"enabling-the-deployprod-job",level:2},{value:"Trigger production jobs",id:"trigger-production-jobs",level:3},{value:"Separate OpenShift project",id:"separate-openshift-project",level:3},{value:"Adding even more Environments",id:"adding-even-more-environments",level:2}],u={toc:c};function m(e){var n=e.components,l=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The included pipeline contains jobs for ",(0,o.kt)("inlineCode",{parentName:"p"},"dev")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"prod")," environments.\nHere we'll talk about enabling, using and adding more environments."),(0,o.kt)("h2",{id:"enabling-the-deployprod-job"},"Enabling the ",(0,o.kt)("inlineCode",{parentName:"h2"},"deploy:prod")," job"),(0,o.kt)("p",null,"The provided ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy:prod")," job is disabled by default.\nThis is to force you to make an active choice on wether you want to use the job or ",(0,o.kt)("a",{parentName:"p",href:"/cra/advanced/deploy-argocd"},"ArgoCD"),"."),(0,o.kt)("p",null,"To enable the job, simply remove the ",(0,o.kt)("inlineCode",{parentName:"p"},".")," from the last job."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"- .deploy:prod:\n+ deploy:prod:\n")),(0,o.kt)("h3",{id:"trigger-production-jobs"},"Trigger production jobs"),(0,o.kt)("p",null,"To trigger the production jobs, simply run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm version [major|minor|patch]\ngit push --tags\n")),(0,o.kt)("p",null,"This will update the ",(0,o.kt)("inlineCode",{parentName:"p"},"version")," field in ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),",\nupdate the ",(0,o.kt)("inlineCode",{parentName:"p"},"appVersion")," field in ",(0,o.kt)("inlineCode",{parentName:"p"},"chart/Chart.yaml"),",\nand create a git tag with the version."),(0,o.kt)("p",null,"After all the other jobs has completed, we can manually trigger the ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy:prod")," job.\nThis is manual by design, and shouldn't be set to automatic."),(0,o.kt)("h3",{id:"separate-openshift-project"},"Separate OpenShift project"),(0,o.kt)("p",null,"You can, and should create a separate OpenShift project to host the production environment."),(0,o.kt)("p",null,"To do this, simply follow the ",(0,o.kt)("a",{parentName:"p",href:"/cra/configuration/deploy"},"same steps as earlier"),".\nThis time, name it ",(0,o.kt)("inlineCode",{parentName:"p"},"aa-<project-slug>-prod"),".\nWhen adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"OPENSHIFT_TOKEN")," to CI/CD variables, select ",(0,o.kt)("inlineCode",{parentName:"p"},"prod")," as the Environment scope.\nThis variable will then be used instead of the default one in the ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy:prod")," job."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"prod scoped variable",src:t(3653).Z,width:"777",height:"543"})),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you can't see the ",(0,o.kt)("inlineCode",{parentName:"p"},"prod")," environment when creating a variable,\nyou need to trigger the production jobs first.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"build:prod")," job will then provision the ",(0,o.kt)("inlineCode",{parentName:"p"},"prod")," environment,\nand you can insert the ",(0,o.kt)("inlineCode",{parentName:"p"},"OPENSHIFT_TOKEN")," before triggering the deploy job.")),(0,o.kt)("h2",{id:"adding-even-more-environments"},"Adding even more Environments"),(0,o.kt)("p",null,"Usually, a development and a production environment is enough.\nIn big applications however, you might see the need for more environments."),(0,o.kt)("p",null,"In this example, we will set up a QA environment.\nTo do this, we will simply copy the ",(0,o.kt)("inlineCode",{parentName:"p"},"prod")," jobs, and create our own for ",(0,o.kt)("inlineCode",{parentName:"p"},"qa")," instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"build:qa:\n  extends: build:dev\n  environment:\n    name: qa\n  rules:\n    - if: '$CI_COMMIT_TAG'\n\nimage:qa:\n  extends: image:dev\n  variables:\n    IMAGE_TAG: qa\n  rules:\n    - if: '$CI_COMMIT_TAG'\n  needs: [ \"build:qa\" ]\n\nsentry:qa:\n  extends: sentry:dev\n  variables:\n    SENTRY_ENV: qa\n  rules:\n    - if: '$CI_COMMIT_TAG'\n  needs: [ \"build:qa\" ]\n\n.deploy:qa:\n  extends: deploy:dev\n  variables:\n    ROUTE: $CI_PROJECT_NAME-qa.apps.int.intility.no\n  environment:\n    name: qa\n    url: https://$CI_PROJECT_NAME-qa.apps.int.intility.no\n  rules:\n    - if: '$CI_COMMIT_TAG'\n  needs: [ \"test\", \"image:qa\" ]\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"We don't override the Sentry release and the image version,\nto avoid version collisions with the production jobs.")),(0,o.kt)("p",null,"This example will, like the production jobs, be triggered by git tags.\nBut it will automatically deploy it to the QA environment,\nwhich will be created in the default OpenShift project,\nunless you've created a custom QA project."))}m.isMDXComponent=!0},3653:function(e,n,t){n.Z=t.p+"assets/images/gitlab-scoped-prod-604c558ff3dbe92cf6e9d99aa5d91ba6.png"}}]);