"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2492],{2145:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=r(3117),s=r(102),a=(r(7294),r(3905)),i=["components"],o={title:"Express",sidebar_label:"Express",slug:"/Topics/Express",sidebar_position:1},l=void 0,c={unversionedId:"topics/Express",id:"topics/Express",title:"Express",description:"Express is a web framework for Node that allows us to create a HTTP server where we can create our API.",source:"@site/express/topics/Express.mdx",sourceDirName:"topics",slug:"/Topics/Express",permalink:"/express/Topics/Express",editUrl:"https://github.com/Intility/templates/tree/main/docusaurus/express/topics/Express.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Express",sidebar_label:"Express",slug:"/Topics/Express",sidebar_position:1},sidebar:"express",previous:{title:"CORS",permalink:"/express/Setup/Security/CORS"},next:{title:"Testing with Jest",permalink:"/express/Topics/Jest"}},u={},p=[],d={toc:p};function f(e){var t=e.components,o=(0,s.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Express is a web framework for Node that allows us to create a HTTP server where we can create our API.\nGetting started with an Express app is fairly easy and can be done by a couple of lines of code.\nThis is great if you want to test something, but larger enterprise applications require a more robust structural layered design. "),(0,a.kt)("p",null,"You can find the easy to follow getting started guide at Express' homepage: ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/en/starter/hello-world.html"},'"Express Hello World"'),"."),(0,a.kt)("p",null,"In this template i'll follow a multi-layered API architecture which divides the API into 3 layers:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Routes and Controllers - This is where you handle the incoming requests"),(0,a.kt)("li",{parentName:"ul"},"Services - Where you execute business logic on the entity, e.g. fetching other entities, calculating stuff."),(0,a.kt)("li",{parentName:"ul"},"Repositories and Providers - Where you execute requests and/or queries to the database.")),(0,a.kt)("p",null,(0,a.kt)("img",{loading:"lazy",alt:"Multilayer-api-architecture",src:r(3685).Z,width:"301",height:"461"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE: In this architecture it is important that the communication between each layer always flows downwards or sideways, never upwards. Like a service calling an controller.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"Project folder structure\nThis repository contains an example of an multilayered API design structure, as well as an example API for an User entity.\n\ud83d\udcc2 src\n\u2523 \ud83d\udcc2 api\n\u2503  \u2517 \ud83d\udcc2 user   \n\u2503    \u2523 \ud83d\udcc2 dto\n\u2503    \u2503  \u2523 \ud83d\udcdc create-user.dto.ts     // DTO for creating a User           \n\u2503    \u2503  \u2523 \ud83d\udcdc update-user.dto.ts     // DTO for updating a User\n\u2503    \u2503  \u2517 \ud83d\udcdc user.dto.ts            // Main DTO for a User\n\u2503    \u2523 \ud83d\udcc2 entities  \n\u2503    \u2503  \u2517 \ud83d\udcdc user.entity.ts         // Database entity for a User\n\u2503    \u2523 \ud83d\udcdc user.router.ts            // Express router for handling incoming requests\n\u2503    \u2523 \ud83d\udcdc user.controller.ts        // Controller class for handling incoming request from the router, only simple data validation is done at this level\n\u2503    \u2517 \ud83d\udcdc user.service.ts           // Service class for handling business logic, like database queries, external HTTP requests etc\n\u2503\n\u2523 \ud83d\udcc2 __tests__                      // Folder for test environment\n\u2503\n\u2523 \ud83d\udcc2 config                         // Folder for various configuration files\n\u2523 \ud83d\udcc2 middlewares                    // This is where you store all the custom express middlewares\n\u2523 \ud83d\udcc2 interfaces                     // This is where you define all typescript interfaces, types, enums etc.\n\u2523 \ud83d\udcc2 static                         // Folder for hosting static files.\n\u2517 \ud83d\udcc2 utils                          // Other utility functions.\n")),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"To get you started this template provides a User entity with CRUD routes, controller, service and a repository for this entity."))))}f.isMDXComponent=!0},3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(r),f=s,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3685:function(e,t,r){t.Z=r.p+"assets/images/Multilayer-api-architecture-8bfac785f1e947989cfeeca23b15d30f.png"}}]);